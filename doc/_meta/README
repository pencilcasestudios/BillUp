Setting up the application to run the first time
================================================
Local machine setup
-------------------
cd ~/Projects/Rails/BillUp
cp config/examples/database.yml config # Setup the database
cp config/examples/config.yml config # Setup the configuration files
cp config/examples/deploy.rb config # Setup the capistrano deployment recipe
cp config/examples/deploy/*.rb config/deploy # Setup deployment stage configuration

Set up the hosts (/etc/hosts)
127.0.0.1	billup.dev		www.billup.dev

Setup deployment references:
git remote add virtual billup.virtual:/var/Repositories/Git/BillUp.git
git remote add production billup.net:/var/Repositories/Git/BillUp.git

Virtual machine setup
---------------------
Test SSH access:
ssh deploy@billup.virtual
ssh vladimir@billup.virtual

Set up the hosts (/etc/hosts):
ssh vladimir@billup.virtual
127.0.0.1 billup.virtual 	www.billup.virtual

Check that SSH "loops back" on the virtual machine (host key verification):
# On the local development machine
ssh deploy@rails.vm

# On the virtual machine
ssh billup.virtual

Create the Git repository:
ssh deploy@billup.virtual
cd /var/Repositories/Git/
mkdir BillUp.git
cd BillUp.git
git init --bare
cd ..
chown -R deploy:deployers BillUp.git/

Push to the Git repository:
# From the development machine:
cd ~/Projects/Rails/BillUp
git push virtual master

Configure nginx:
ssh vladimir@billup.virtual
cd /opt/nginx/conf/sites-available/
# Set up the nginx configuration
cd /opt/nginx/conf/sites-enabled/
sudo ln -s /opt/nginx/conf/sites-available/billup.virtual.conf billup.virtual

Generate an SSL certificate and key:
cd /opt/nginx/ssl
sudo mkdir BillUp
cd BillUp
sudo openssl genrsa -des3 -out billup.virtual.key 1024
sudo openssl req -new -key billup.virtual.key -out billup.virtual.csr
sudo cp billup.virtual.key billup.virtual.key.original
sudo openssl rsa -in billup.virtual.key.original -out billup.virtual.key
sudo openssl x509 -req -days 365 -in billup.virtual.csr -signkey billup.virtual.key -out billup.virtual.crt

Test the nginx configuration:
sudo /opt/nginx/sbin/nginx -t

If all is well, load the new nginx configuration:
sudo /etc/init.d/nginx reload

Setup the MySQL database user:
ssh vladimir@rails.vm
mysql -u root -p
create user 'billup'@'localhost' identified by 'VirtualBillUpPassword';
grant all on BillUp_virtual.* to 'billup'@'localhost';

Setup the MySQL database:
mysql -u billup -p
create database BillUp_virtual;

Setup the Monit scripts:
# From the development machine
cd ~/Projects/Rails/BillUp/config/examples
scp delayed_job.billup.virtual.monitrc vladimir@rails.vm:~
ssh vladimir@rails.vm

# From the virtual machine
sudo mv ~/delayed_job.billup.virtual.monitrc /etc/monit/conf.d/
sudo /etc/init.d/monit syntax

Setup the YAML configuration files:
# From the development machine
cd ~/Projects/Rails/BillUp/config/examples
scp config.virtual.yml deploy@rails.vm:~/config.yml
scp database.virtual.yml deploy@rails.vm:~/database.yml
ssh deploy@rails.vm

# From the virtual machine
mkdir -p ~/Projects/Configurations/BillUp/virtual
mv database.yml ~/Projects/Configurations/BillUp/virtual/
mv config.yml ~/Projects/Configurations/BillUp/virtual/

# After running cap deploy:setup
cd ~/Projects/Configurations/BillUp/virtual
cp *.yml /var/Apps/BillUp/virtual/shared/config/

# After deploying the app
# From the virtual machine
sudo /etc/init.d/monit reload






Testing
=======
# Guard for testing
bundle update
gem cleanup
rake db:drop
rake db:setup
rake db:test:prepare
guard




Gem management
==============
MAINTAIN GEM BUNDLE
bundle update
gem cleanup

DELETE ALL INSTALLED GEMS
gem list | cut -d" " -f1 | xargs gem uninstall -aIx




Application Deployment
======================
# Capistrano steps for initial deployment
# VIRTUAL MACHINE DEPLOYMENT
git checkout master
git merge work
git push
git push virtual				# May need to 'git push virtual master'
cap deploy:setup        # Update configuration files and create the database after this
cap deploy:check
cap deploy:update
cap deploy:migrate
cap db:seed
cap deploy:start

# Capistrano for non-initial deployment
# STAGING DEPLOYMENT
git checkout master
git merge work
git push
git push production
cap deploy

# Capistrano for non-initial deployment
# PRODUCTION DEPLOYMENT
git checkout master
git merge work
git push
git push production
cap production deploy
git tag "`date +published_%Y-%m-%d_%H%M%S`"




Running the Application
=======================
rails server # In one terminal window - to run the application
rake jobs:work # In another terminal window - to run delayed job
